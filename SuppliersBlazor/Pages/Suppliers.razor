@page "/suppliers"
@page "/"
@inject ICrud sql
@inject NavigationManager Navigator

<h3>Добавление нового поставщика</h3>

<btn class="btn btn-primary" @onclick="OnClick">Создать поставщика</btn>

<EditForm Model = "model">
    @if (model.id > 0)
    {
    <label class="form-group row">@model.id</label>
    }
</EditForm>

<h3>Поставщики</h3>
@* Вывод всех поставщиков *@

@if (suppliers != null)
{
    <ul>
        @foreach (var supplier in suppliers)
        {
            <li>@supplier.id @supplier.supplier @supplier.prefix</li>
        }
    </ul>


}


@code {

    private int parameter;
    private void OnClick()
    {
        var result = CreateNewSupplier(sql);

        parameter = model.id;

        Navigator.NavigateTo($"supplierentry/{parameter}");
    }

    private Supplier model = new();

    private IReadOnlyList<Supplier>? suppliers;

    protected override async Task OnInitializedAsync()
    {
        suppliers = await sql.GetAllSuppliersAsync();
    }


    private async Task CreateNewSupplier(ICrud sql)
    {
        Supplier supplier = new Supplier
            {
                //string sql = "insert into suppliers (supplier, prefix, partnum_col, avail, cost, markupthreshold, markupbelow, markupabove) values (@id, @supplier, @prefix, @partnum_col, @avail, @cost, @markupthreshold, @markupbelow, @markupabove);";

                supplier = "Новый Поставщик - ИЗМЕНИТЬ",
                prefix = "NP - ИЗМЕНИТЬ",
                partnum_col = 1,
                avail = 2,
                cost = 5,
                markupthreshold = 150000,
                markupbelow = 0.3m,
                markupabove = 0.2m

            };

        model = await sql.CreateSupplierAsync(supplier);


    }


}
